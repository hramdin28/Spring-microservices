version: "3.9"

services:
  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    profiles: ["common"]
    networks:
      - myMicroServiceNetwork
    ports:
      - ${ZIPKIN_PORT:-9411}:9411

  postgres:
    image: postgres:14.5-bullseye
    container_name: db
    profiles: ["common"]
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    networks:
      - myMicroServiceNetwork

  keycloak:
    image: quay.io/keycloak/keycloak:19.0.1
    container_name: keycloak
    profiles: ["common"]
    environment:
      KC_DB: postgres
      KC_DB_USERNAME: ${DATABASE_USER}
      KC_DB_PASSWORD: ${DATABASE_PASSWORD}
      KC_DB_SCHEMA: public
      KC_DB_URL_DATABASE: ${DATABASE_NAME}
      KC_DB_URL_HOST: postgres
      KC_DB_URL_PORT: 5432
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
    entrypoint: [ "/opt/keycloak/bin/kc.sh", "start-dev", "--import-realm" ]
    depends_on:
      - postgres
    ports:
      - ${KEYCLOAK_PORT_HTTP:-8080}:8080
      - ${KEYCLOAK_PORT_HTTPS:-8443}:8443
    volumes:
      - ./keycloak/realm-export.json:/opt/keycloak/data/import/realm-export.json
    networks:
      - myMicroServiceNetwork
      
  eureka:
    image: discovery:latest
    container_name: eureka
    profiles: ["app"]
    environment:
      SPRING_PROFILES_ACTIVE: prod
    depends_on:
      - keycloak
    networks:
      - myMicroServiceNetwork
    ports:
      - "8761:8761"      
   
  configserver:
    image: spring-config-server:latest
    container_name: configserver
    profiles: ["app"]
    depends_on:
      - eureka
    networks:
      - myMicroServiceNetwork
    environment:
      SPRING_PROFILES_ACTIVE: native
      SPRING_CONFIG_LOCATION: /app/application.yml
    volumes:
      - ./spring-config-server/application.yml:/app/application.yml
    ports:
      - "8888:8888"     
      
  admin:
    image: admin:latest
    container_name: admin
    profiles: ["app"]
    environment:
      SPRING_PROFILES_ACTIVE: prod
      SPRING_CLOUD_BOOTSTRAP_ENABLED: "true"
    depends_on:
      - configserver
    networks:
      - myMicroServiceNetwork
    ports:
      - "8093:8093"

  consumer:
    image: consumer:latest
    container_name: consumer
    profiles: ["app"]
    environment:
      SPRING_PROFILES_ACTIVE: prod
      SPRING_CLOUD_BOOTSTRAP_ENABLED: "true"
    depends_on:
      - configserver
    networks:
      - myMicroServiceNetwork
    ports:
      - "8082:8082"
      
  producer:
    image: producer:latest
    container_name: producer
    profiles: ["app"]
    environment:
      SPRING_PROFILES_ACTIVE: prod
      SPRING_CLOUD_BOOTSTRAP_ENABLED: "true"
    depends_on:
      - configserver
    networks:
      - myMicroServiceNetwork
    ports:
      - "8083:8081"    

  producer1:
    image: producer:latest
    container_name: producer1
    profiles: ["app"]
    environment:
      SPRING_PROFILES_ACTIVE: prod
      SPRING_CLOUD_BOOTSTRAP_ENABLED: "true"
      SERVER_PORT: 8082
    depends_on:
      - configserver
    networks:
      - myMicroServiceNetwork
    ports:
      - "8084:8082"    
      
volumes:
  postgres_data:

networks:
  myMicroServiceNetwork:
